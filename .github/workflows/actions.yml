name: Testing
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - synchronize
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
      - name: Run pytest
        run: pipenv run tests | tee cov.txt
      - name: Set coverage to outputs
        id: coverage
        run: |
          cov=$(python .github/coverage_comment.py)
          cov="${cov//$'\n'/'%0A'}"
          echo "::set-output name=result::${cov}"
      - name: echo cov.
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v3
        with:
          script: |
            const output = `${{ steps.coverage.outputs.result }}`
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
